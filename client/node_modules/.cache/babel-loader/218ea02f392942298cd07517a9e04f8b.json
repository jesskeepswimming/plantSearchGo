{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jessi\\\\OneDrive\\\\Documents\\\\GitHub\\\\plantSearchGo\\\\client\\\\src\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapboxGl, { Layer, Feature, Marker } from \"react-mapbox-gl\";\nimport svg from './Pin'; // tslint:disable-next-line:no-var-requires\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  token,\n  styles\n} = require('./config.json');\n\nconst Map = ReactMapboxGl({\n  accessToken: token\n});\n_c = Map;\nconst mapStyle = {\n  flex: 1,\n  height: 500\n};\nconst paintLayer = {\n  'fill-extrusion-color': '#aaa',\n  'fill-extrusion-height': {\n    type: 'identity',\n    property: 'height'\n  },\n  'fill-extrusion-base': {\n    type: 'identity',\n    property: 'min_height'\n  },\n  'fill-extrusion-opacity': 0.6\n}; // export interface Props {\n//   // tslint:disable-next-line:no-any\n//   onStyleLoad?: (map: any) => any;\n// }\n// // Create an image for the Layer\n// const image = new Image();\n// image.src = 'pin.svg';\n\nconst getStations = () => {\n  return {\n    \"a\": {\n      \"position\": [-80.544861, 43.472286]\n    },\n    \"b\": {\n      \"position\": [43.472286, -80.544861]\n    }\n  };\n};\n\nfunction ThreeDMap(props) {\n  _s();\n\n  const [fitBounds, setFitBounds] = useState(undefined);\n  const [center, setCenter] = useState([-80.544861, 43.472286]);\n  const [zoom, setZoom] = useState([50]);\n  const [bearing, setBearing] = useState([-60]);\n  const [pitch, setPitch] = useState([80]);\n  const [station, setStation] = useState(undefined);\n  const [stations, setStations] = useState({});\n  const [images, setImages] = useState([]);\n  const [image, setImage] = useState(); // Define layout to use in Layer component\n\n  const layoutLayer = {\n    'icon-image': 'pin'\n  };\n  useEffect(() => {\n    const img = /*#__PURE__*/React.createElement(\"img\", {\n      src: 'pin.svg'\n    });\n    setImage(img);\n    setImages('pin', img);\n    var k = getStations();\n    setStations(k);\n  }, []); // onStyleLoad = (map) => {\n  //   // const onStyleLoad = props.onStyleLoad;\n  //   return props.onStyleLoad && props.onStyleLoad(map);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      style: \"mapbox://styles/mapbox/streets-v8\",\n      containerStyle: mapStyle,\n      onStyleLoad: props.onStyleLoad,\n      zoom: zoom,\n      center: center,\n      pitch: pitch,\n      bearing: bearing,\n      children: [/*#__PURE__*/_jsxDEV(Layer, {\n        id: \"3d-buildings\",\n        sourceId: \"composite\",\n        sourceLayer: \"building\",\n        filter: ['==', 'extrude', 'true'],\n        type: \"fill-extrusion\",\n        minZoom: 14,\n        paint: paintLayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layer, {\n        type: \"symbol\",\n        id: \"marker\",\n        layout: layoutLayer,\n        images: images,\n        children: Object.keys(stations).map((stationK, index) => /*#__PURE__*/_jsxDEV(Feature, {\n          coordinates: stations[stationK].position\n        }, stationK, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), svg, /*#__PURE__*/_jsxDEV(\"svg\", {\n      src: \"pin.svg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Icons made by \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.flaticon.com/authors/smashicons\",\n        title: \"Smashicons\",\n        children: \"Smashicons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 26\n      }, this), \" from \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.flaticon.com/\",\n        title: \"Flaticon\",\n        children: \"www.flaticon.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ThreeDMap, \"1aPZLEMdcrYsz6I1gFyWWfnW4HE=\");\n\n_c2 = ThreeDMap;\nexport default ThreeDMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"ThreeDMap\");","map":{"version":3,"sources":["C:/Users/jessi/OneDrive/Documents/GitHub/plantSearchGo/client/src/Map.js"],"names":["React","useState","useEffect","ReactMapboxGl","Layer","Feature","Marker","svg","token","styles","require","Map","accessToken","mapStyle","flex","height","paintLayer","type","property","getStations","ThreeDMap","props","fitBounds","setFitBounds","undefined","center","setCenter","zoom","setZoom","bearing","setBearing","pitch","setPitch","station","setStation","stations","setStations","images","setImages","image","setImage","layoutLayer","img","createElement","src","k","onStyleLoad","Object","keys","map","stationK","index","position"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapboxGl, {Layer, Feature, Marker} from \"react-mapbox-gl\";\nimport svg from './Pin'\n// tslint:disable-next-line:no-var-requires\nconst { token, styles } = require('./config.json');\n\nconst Map = ReactMapboxGl({ accessToken: token });\n\nconst mapStyle = {\n  flex: 1,\n  height: 500\n};\n\nconst paintLayer = {\n  'fill-extrusion-color': '#aaa',\n  'fill-extrusion-height': {\n    type: 'identity',\n    property: 'height'\n  },\n  'fill-extrusion-base': {\n    type: 'identity',\n    property: 'min_height'\n  },\n  'fill-extrusion-opacity': 0.6\n};\n\n// export interface Props {\n//   // tslint:disable-next-line:no-any\n//   onStyleLoad?: (map: any) => any;\n// }\n\n\n\n// // Create an image for the Layer\n// const image = new Image();\n// image.src = 'pin.svg';\n\n\nconst getStations = () =>{\n  return {\n    \"a\": {\n      \"position\": [-80.544861, 43.472286]\n    },\n    \"b\": {\n      \"position\": [43.472286, -80.544861]\n    },\n  }\n}\n\nfunction ThreeDMap(props) {\n\n  const [fitBounds, setFitBounds] = useState(undefined);\n  const [center, setCenter] = useState([-80.544861, 43.472286]);\n  const [zoom, setZoom] = useState([50]);\n  const [bearing, setBearing] = useState([-60]);\n  const [pitch, setPitch] = useState([80]);\n  const [station, setStation] = useState(undefined);\n  const [stations, setStations] = useState({});\n  const [images, setImages] = useState([])\n  const [image, setImage] = useState()\n  \n  \n  // Define layout to use in Layer component\n  const layoutLayer = { 'icon-image': 'pin' };\n\n  useEffect(()=> {\n    const img = React.createElement(\n      \"img\",\n      {\n        src: 'pin.svg',\n      },\n    )\n    setImage(img)\n    setImages('pin', img)\n    \n    var k = getStations();\n    setStations(k)\n\n  }, []);\n\n  // onStyleLoad = (map) => {\n  //   // const onStyleLoad = props.onStyleLoad;\n  //   return props.onStyleLoad && props.onStyleLoad(map);\n  // };\n\n\n    return (\n      <div>\n      <Map\n        style=\"mapbox://styles/mapbox/streets-v8\"\n        containerStyle={mapStyle}\n        onStyleLoad={props.onStyleLoad}\n        zoom={zoom}\n        center={center}\n        pitch={pitch}\n        bearing={bearing}\n      >\n        <Layer\n          id=\"3d-buildings\"\n          sourceId=\"composite\"\n          sourceLayer=\"building\"\n          filter={['==', 'extrude', 'true']}\n          type=\"fill-extrusion\"\n          minZoom={14}\n          paint={paintLayer}\n        />\n        <Layer \n          type=\"symbol\" \n          id=\"marker\" \n          layout={layoutLayer} \n          images={images}\n        >\n          {Object.keys(stations).map((stationK, index)=> (\n            <Feature\n              key= {stationK}\n              coordinates={stations[stationK].position}\n            />\n          ))}\n        </Layer>\n       \n      \n      \n      </Map>\n      {svg}\n      <svg src=\"pin.svg\"></svg>\n      <div>Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n      </div>\n    );\n\n}\n\nexport default ThreeDMap;"]},"metadata":{},"sourceType":"module"}