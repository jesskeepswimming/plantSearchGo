{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jessi\\\\OneDrive\\\\Documents\\\\GitHub\\\\plantSearchGo\\\\client\\\\src\\\\AddPost.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AddIcon from '@material-ui/icons/Add';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { SERVER } from \"./config\";\nimport { storage, firebase } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\nexport function Steps(props) {\n  _s();\n\n  const user = props.user;\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const [imageAsFile, setImageAsFile] = useState('');\n  const [imageAsUrl, setImageAsUrl] = useState('');\n  const [stage, setStage] = useState(\"Seed\");\n  const [caption, setCaption] = useState(\"\");\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n  const storageRef = storage.ref();\n\n  const handleImageAsFile = e => {\n    const image = e.target.files[0];\n    setImageAsFile(imageAsFile => image);\n  };\n\n  const imageFileType = name => {\n    if (name.endsWith(\".jpg\") || name.endsWith(\".jpeg\") || name.endsWith(\".png\")) return true;\n    return false;\n  };\n\n  const handleFireBaseUpload = e => {\n    // e.preventDefault()\n    console.log('start of upload'); // async magic goes here...\n\n    if (imageAsFile === '' || !imageFileType(imageAsFile.name)) {\n      console.error(`not an image, the image file is a ${typeof imageAsFile}`);\n      let errorMsg = `file must be a jpeg/png image`;\n      setUploadStatus(\"error: \" + errorMsg);\n    } else {\n      var current = new Date().valueOf();\n      const url = `/images/${current}${imageAsFile.name}`;\n      const imageRef = storageRef.child(url);\n      var uploadTask = imageRef.put(imageAsFile);\n      uploadTask.on('state_changed', snapshot => {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        setUploadStatus(progress + \"%\");\n        console.log('Upload is ' + progress + '% done');\n\n        switch (snapshot.state) {\n          case firebase.storage.TaskState.PAUSED:\n            // or 'paused'\n            console.log('Upload is paused');\n            break;\n\n          case firebase.storage.TaskState.RUNNING:\n            // or 'running'\n            console.log('Upload is running');\n            break;\n        }\n      }, error => {\n        // Handle unsuccessful uploads\n        setUploadStatus(\"error\");\n        console.log(\"error\");\n      }, () => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n          console.log('File available at', downloadURL);\n          setImageAsUrl(downloadURL);\n          onPostData(downloadURL);\n          setUploadStatus(\"success\");\n        });\n      });\n    }\n  };\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const onPostData = async downloadURL => {\n    try {\n      const body = {\n        plant_id: props.plant_id,\n        image: downloadURL,\n        stage: stage,\n        caption: caption\n      };\n      console.log(body);\n      const response = await fetch(`http://${SERVER}/posts`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleSubmit = () => {\n    setOpen(true);\n    const success = handleFireBaseUpload();\n  };\n\n  const handleStageChange = e => {\n    setStage(e.target.value);\n  };\n\n  const steps = ['Upload your post'];\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleImageAsFile // hidden\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.formControl,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-label\",\n                children: \"Stage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-simple-select-label\",\n                id: \"demo-simple-select\",\n                value: stage,\n                onChange: handleStageChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Seed\",\n                  children: \"Seed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Seedling\",\n                  children: \"Seedling\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Flowering\",\n                  children: \"Flowering\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Fruiting\",\n                  children: \"Fruiting\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Mature\",\n                  children: \"Mature\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-required\",\n              label: \"Caption\",\n              defaultValue: \"\",\n              onChange: e => setCaption(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return 'Unknown step';\n    }\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    if (uploadStatus == \"success\") {\n      props.handleClose();\n      props.reloadFunction();\n    }\n  }, [uploadStatus]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      orientation: \"vertical\",\n      children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: getStepContent(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: activeStep === steps.length - 1 ? handleSubmit : handleNext,\n                className: classes.button,\n                disabled: uploadStatus != \"\",\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      message: uploadStatus,\n      action: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Steps, \"w/0QqkYYrTHit5Tc2ZZjPZWuM8c=\", false, function () {\n  return [useStyles];\n});\n\n_c = Steps;\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 7\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default function AddPost(props) {\n  _s2();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"customized-dialog-title\",\n        onClose: handleClose,\n        children: \"New Plant Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(Steps, {\n          handleClose: handleClose,\n          user: props.user,\n          reloadFunction: props.reloadFunction,\n          plant_id: props.plant_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(AddPost, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c2 = AddPost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Steps\");\n$RefreshReg$(_c2, \"AddPost\");","map":{"version":3,"sources":["C:/Users/jessi/OneDrive/Documents/GitHub/plantSearchGo/client/src/AddPost.js"],"names":["React","useState","useEffect","withStyles","makeStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","TextField","Stepper","Step","StepLabel","StepContent","FormControlLabel","Checkbox","InputLabel","MenuItem","FormHelperText","FormControl","Select","AddIcon","Snackbar","SERVER","storage","firebase","useStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","Steps","props","user","classes","activeStep","setActiveStep","imageAsFile","setImageAsFile","imageAsUrl","setImageAsUrl","stage","setStage","caption","setCaption","uploadStatus","setUploadStatus","storageRef","ref","handleImageAsFile","e","image","target","files","imageFileType","name","endsWith","handleFireBaseUpload","console","log","error","errorMsg","current","Date","valueOf","url","imageRef","child","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","state","TaskState","PAUSED","RUNNING","getDownloadURL","then","downloadURL","onPostData","handleNext","prevActiveStep","handleBack","body","plant_id","response","fetch","method","headers","JSON","stringify","err","handleSubmit","setOpen","success","handleStageChange","value","steps","getStepContent","step","formControl","open","handleClose","event","reason","reloadFunction","map","label","index","length","styles","margin","closeButton","position","right","top","color","palette","grey","DialogTitle","children","onClose","other","DialogContent","DialogActions","AddPost","handleClickOpen"],"mappings":"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","sourcesContent":["import React, {useState, useEffect}from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {SERVER} from  \"./config\"\r\n\r\nimport {storage, firebase} from './App'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport function Steps(props) {\r\n\r\n  const user = props.user\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [imageAsFile, setImageAsFile] = useState('')\r\n  const [imageAsUrl, setImageAsUrl] = useState('')\r\n  const [stage, setStage] = useState(\"Seed\")\r\n  const [caption, setCaption] = useState(\"\")\r\n  const [uploadStatus, setUploadStatus] = useState(\"\")\r\n\r\n  const storageRef = storage.ref();\r\n\r\n\r\n  const handleImageAsFile = (e) => {\r\n    const image = e.target.files[0]\r\n    setImageAsFile(imageAsFile => (image))\r\n  }\r\n\r\n  const imageFileType = (name) => {\r\n    if (name.endsWith(\".jpg\") || name.endsWith(\".jpeg\") || name.endsWith(\".png\")) return true\r\n\r\n    return false\r\n  }\r\n\r\n  const handleFireBaseUpload = e => {\r\n    // e.preventDefault()\r\n    console.log('start of upload')\r\n    // async magic goes here...\r\n\r\n    if(imageAsFile === '' || !imageFileType(imageAsFile.name)) {\r\n        console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\r\n        let errorMsg = `file must be a jpeg/png image`\r\n        setUploadStatus(\"error: \" +errorMsg)\r\n      } else{\r\n        var current = new Date().valueOf();\r\n        const url = `/images/${current}${imageAsFile.name}`\r\n        const imageRef = storageRef.child(url)\r\n\r\n        var uploadTask = imageRef.put(imageAsFile)\r\n\r\n        uploadTask.on('state_changed', \r\n            (snapshot) => {\r\n            // Observe state change events such as progress, pause, and resume\r\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            setUploadStatus(progress+ \"%\")\r\n\r\n            console.log('Upload is ' + progress + '% done');\r\n            switch (snapshot.state) {\r\n                case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                console.log('Upload is paused');\r\n                break;\r\n                case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                console.log('Upload is running');\r\n                break;\r\n            }\r\n            }, \r\n            (error) => {\r\n            // Handle unsuccessful uploads\r\n            setUploadStatus(\"error\")\r\n\r\n                console.log(\"error\")\r\n            }, \r\n            () => {\r\n                // Handle successful uploads on complete\r\n                // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n                uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                  console.log('File available at', downloadURL);\r\n                  setImageAsUrl(downloadURL)\r\n                  onPostData(downloadURL)\r\n                  setUploadStatus(\"success\")\r\n\r\n                  \r\n                });\r\n              }\r\n        ); \r\n  \r\n    }\r\n\r\n  \r\n  }\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const onPostData = async (downloadURL) => {\r\n\r\n    try {\r\n        const body = {\r\n            plant_id: props.plant_id,  \r\n            image: downloadURL,\r\n            stage: stage,\r\n            caption: caption\r\n        }\r\n\r\n        console.log(body)\r\n        const response = await fetch( `http://${SERVER}/posts`, {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(body)\r\n        });\r\n        console.log(response)\r\n\r\n    } catch (err){\r\n        console.log(err)\r\n    }\r\n  }\r\n\r\n  const handleSubmit =  () => {\r\n    setOpen(true)\r\n    const success = handleFireBaseUpload()\r\n\r\n  };\r\n\r\n  const handleStageChange = (e) => {\r\n    setStage(e.target.value)\r\n  };\r\n\r\n\r\n  const steps = ['Upload your post'];\r\n\r\n  const getStepContent = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return <form>\r\n           \r\n            <input\r\n                type=\"file\"\r\n                onChange={handleImageAsFile}\r\n                // hidden\r\n            />\r\n             <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Stage</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={stage}\r\n                onChange={handleStageChange}\r\n                >\r\n                <MenuItem value='Seed'>Seed</MenuItem>\r\n                <MenuItem value='Seedling'>Seedling</MenuItem>\r\n                <MenuItem value='Flowering'>Flowering</MenuItem>\r\n                <MenuItem value='Fruiting'>Fruiting</MenuItem>\r\n                <MenuItem value='Mature'>Mature</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            </div>\r\n            <div>\r\n                <TextField id=\"standard-required\" label=\"Caption\" defaultValue={\"\"} onChange={e => setCaption(e.target.value)} />\r\n            </div>\r\n\r\n\r\n        </form>;\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n  }\r\n\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n    if (uploadStatus == \"success\") {\r\n      props.handleClose()\r\n      props.reloadFunction();\r\n    }\r\n    \r\n  }, [uploadStatus]);\r\n\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n              <Typography>{getStepContent(index)}</Typography>\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                 \r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={activeStep === steps.length - 1 ? handleSubmit : handleNext}\r\n                    className={classes.button}\r\n                    disabled={uploadStatus != \"\"}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Snackbar open={open} \r\n       message={uploadStatus}\r\n       action={\r\n         <React.Fragment>\r\n           <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n             <CloseIcon fontSize=\"small\" />\r\n           </IconButton>\r\n         </React.Fragment>\r\n       }>\r\n       \r\n      </Snackbar>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n  \r\n  const DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        <Typography variant=\"h6\">{children}</Typography>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    );\r\n  });\r\n  \r\n  const DialogContent = withStyles((theme) => ({\r\n    root: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }))(MuiDialogContent);\r\n  \r\n  const DialogActions = withStyles((theme) => ({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(1),\r\n    },\r\n  }))(MuiDialogActions);\r\n  \r\nexport default function AddPost(props) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Button color=\"primary\" onClick={handleClickOpen}>\r\n          <AddIcon/>\r\n        </Button>\r\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n            New Plant Profile\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Steps handleClose= {handleClose} user={props.user} reloadFunction={props.reloadFunction} plant_id={props.plant_id}/>\r\n          </DialogContent>\r\n          {/* <DialogActions>\r\n         \r\n          </DialogActions> */}\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}