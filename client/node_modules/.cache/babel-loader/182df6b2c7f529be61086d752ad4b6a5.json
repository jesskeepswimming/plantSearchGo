{"ast":null,"code":"var coordEach = require('@turf/meta').coordEach;\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {FeatureCollection|Feature<any>} geojson input features\n * @returns {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\n\n\nmodule.exports = function (geojson) {\n  var bbox = [Infinity, Infinity, -Infinity, -Infinity];\n  coordEach(geojson, function (coord) {\n    if (bbox[0] > coord[0]) bbox[0] = coord[0];\n    if (bbox[1] > coord[1]) bbox[1] = coord[1];\n    if (bbox[2] < coord[0]) bbox[2] = coord[0];\n    if (bbox[3] < coord[1]) bbox[3] = coord[1];\n  });\n  return bbox;\n};","map":{"version":3,"sources":["C:/Users/jessi/OneDrive/Documents/GitHub/plantSearchGo/client/node_modules/@turf/bbox/index.js"],"names":["coordEach","require","module","exports","geojson","bbox","Infinity","coord"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,SAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAChC,MAAIC,IAAI,GAAG,CAACC,QAAD,EAAWA,QAAX,EAAqB,CAACA,QAAtB,EAAgC,CAACA,QAAjC,CAAX;AACAN,EAAAA,SAAS,CAACI,OAAD,EAAU,UAAUG,KAAV,EAAiB;AAChC,QAAIF,IAAI,CAAC,CAAD,CAAJ,GAAUE,KAAK,CAAC,CAAD,CAAnB,EAAwBF,IAAI,CAAC,CAAD,CAAJ,GAAUE,KAAK,CAAC,CAAD,CAAf;AACxB,QAAIF,IAAI,CAAC,CAAD,CAAJ,GAAUE,KAAK,CAAC,CAAD,CAAnB,EAAwBF,IAAI,CAAC,CAAD,CAAJ,GAAUE,KAAK,CAAC,CAAD,CAAf;AACxB,QAAIF,IAAI,CAAC,CAAD,CAAJ,GAAUE,KAAK,CAAC,CAAD,CAAnB,EAAwBF,IAAI,CAAC,CAAD,CAAJ,GAAUE,KAAK,CAAC,CAAD,CAAf;AACxB,QAAIF,IAAI,CAAC,CAAD,CAAJ,GAAUE,KAAK,CAAC,CAAD,CAAnB,EAAwBF,IAAI,CAAC,CAAD,CAAJ,GAAUE,KAAK,CAAC,CAAD,CAAf;AAC3B,GALQ,CAAT;AAMA,SAAOF,IAAP;AACH,CATD","sourcesContent":["var coordEach = require('@turf/meta').coordEach;\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {FeatureCollection|Feature<any>} geojson input features\n * @returns {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nmodule.exports = function (geojson) {\n    var bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (bbox[0] > coord[0]) bbox[0] = coord[0];\n        if (bbox[1] > coord[1]) bbox[1] = coord[1];\n        if (bbox[2] < coord[0]) bbox[2] = coord[0];\n        if (bbox[3] < coord[1]) bbox[3] = coord[1];\n    });\n    return bbox;\n};\n"]},"metadata":{},"sourceType":"script"}