{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jessi\\\\OneDrive\\\\Documents\\\\GitHub\\\\plantSearchGo\\\\client\\\\src\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapboxGl, { Layer, Feature, Marker } from \"react-mapbox-gl\"; // tslint:disable-next-line:no-var-requires\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  token,\n  styles\n} = require('./config.json');\n\nconst Map = ReactMapboxGl({\n  accessToken: token\n});\n_c = Map;\nconst mapStyle = {\n  flex: 1,\n  height: 500\n};\nconst paintLayer = {\n  'fill-extrusion-color': '#aaa',\n  'fill-extrusion-height': {\n    type: 'identity',\n    property: 'height'\n  },\n  'fill-extrusion-base': {\n    type: 'identity',\n    property: 'min_height'\n  },\n  'fill-extrusion-opacity': 0.6\n}; // export interface Props {\n//   // tslint:disable-next-line:no-any\n//   onStyleLoad?: (map: any) => any;\n// }\n// Define layout to use in Layer component\n\nconst layoutLayer = {\n  'icon-image': 'londonCycle'\n}; // Create an image for the Layer\n\nconst image = new Image();\nimage.src = 'data:image/svg+xml;charset=utf-8;base64,' + btoa(svg);\nconst images = ['londonCycle', image];\n\nfunction ThreeDMap(props) {\n  _s();\n\n  const [fitBounds, setFitBounds] = useState(undefined);\n  const [center, setCenter] = useState([-80.544861, 43.472286]);\n  const [zoom, setZoom] = useState([50]);\n  const [bearing, setBearing] = useState([-60]);\n  const [pitch, setPitch] = useState([80]);\n  const [station, setStation] = useState(undefined);\n  const [stations, setStations] = useState({});\n  useEffect(() => {}, []);\n\n  onStyleLoad = map => {\n    const {\n      onStyleLoad\n    } = props;\n    return onStyleLoad && onStyleLoad(map);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Map, {\n    style: \"mapbox://styles/mapbox/streets-v8\",\n    containerStyle: mapStyle,\n    onStyleLoad: this.onStyleLoad,\n    zoom: this.zoom,\n    center: this.center,\n    pitch: this.pitch,\n    bearing: this.bearing,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      id: \"3d-buildings\",\n      sourceId: \"composite\",\n      sourceLayer: \"building\",\n      filter: ['==', 'extrude', 'true'],\n      type: \"fill-extrusion\",\n      minZoom: 14,\n      paint: paintLayer,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        coordinates: [43.472286, 80.544861],\n        anchor: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          height: \"100\",\n          width: \"100\",\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"50\",\n            cy: \"50\",\n            r: \"40\",\n            stroke: \"black\",\n            \"stroke-width\": \"3\",\n            fill: \"red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ThreeDMap, \"+cN85inJnu0UgAvYT46TpyLqMS8=\");\n\n_c2 = ThreeDMap;\nexport default ThreeDMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"ThreeDMap\");","map":{"version":3,"sources":["C:/Users/jessi/OneDrive/Documents/GitHub/plantSearchGo/client/src/Map.js"],"names":["React","useState","useEffect","ReactMapboxGl","Layer","Feature","Marker","token","styles","require","Map","accessToken","mapStyle","flex","height","paintLayer","type","property","layoutLayer","image","Image","src","btoa","svg","images","ThreeDMap","props","fitBounds","setFitBounds","undefined","center","setCenter","zoom","setZoom","bearing","setBearing","pitch","setPitch","station","setStation","stations","setStations","onStyleLoad","map"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapboxGl, {Layer, Feature, Marker} from \"react-mapbox-gl\";\n\n// tslint:disable-next-line:no-var-requires\nconst { token, styles } = require('./config.json');\n\nconst Map = ReactMapboxGl({ accessToken: token });\n\nconst mapStyle = {\n  flex: 1,\n  height: 500\n};\n\nconst paintLayer = {\n  'fill-extrusion-color': '#aaa',\n  'fill-extrusion-height': {\n    type: 'identity',\n    property: 'height'\n  },\n  'fill-extrusion-base': {\n    type: 'identity',\n    property: 'min_height'\n  },\n  'fill-extrusion-opacity': 0.6\n};\n\n// export interface Props {\n//   // tslint:disable-next-line:no-any\n//   onStyleLoad?: (map: any) => any;\n// }\n\n  // Define layout to use in Layer component\nconst layoutLayer = { 'icon-image': 'londonCycle' };\n\n// Create an image for the Layer\nconst image = new Image();\nimage.src = 'data:image/svg+xml;charset=utf-8;base64,' + btoa(svg);\nconst images = ['londonCycle', image];\n\n\nfunction ThreeDMap(props) {\n\n  const [fitBounds, setFitBounds] = useState(undefined);\n  const [center, setCenter] = useState([-80.544861, 43.472286]);\n  const [zoom, setZoom] = useState([50]);\n  const [bearing, setBearing] = useState([-60]);\n  const [pitch, setPitch] = useState([80]);\n  const [station, setStation] = useState(undefined);\n  const [stations, setStations] = useState({});\n\n  useEffect(()=> {\n\n  }, []);\n\n  onStyleLoad = (map) => {\n    const { onStyleLoad } = props;\n    return onStyleLoad && onStyleLoad(map);\n  };\n\n\n    return (\n      <Map\n        style=\"mapbox://styles/mapbox/streets-v8\"\n        containerStyle={mapStyle}\n        onStyleLoad={this.onStyleLoad}\n        zoom={this.zoom}\n        center={this.center}\n        pitch={this.pitch}\n        bearing={this.bearing}\n      >\n        <Layer\n          id=\"3d-buildings\"\n          sourceId=\"composite\"\n          sourceLayer=\"building\"\n          filter={['==', 'extrude', 'true']}\n          type=\"fill-extrusion\"\n          minZoom={14}\n          paint={paintLayer}\n        >\n        <Marker\n          coordinates={[43.472286, 80.544861]}\n          anchor=\"bottom\">\n          <svg height=\"100\" width=\"100\">\n            <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" />\n          </svg>\n        </Marker>\n      </Layer>\n      </Map>\n    );\n\n}\n\nexport default ThreeDMap;"]},"metadata":{},"sourceType":"module"}