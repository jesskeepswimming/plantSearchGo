{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jessi\\\\OneDrive\\\\Documents\\\\GitHub\\\\plantSearchGo\\\\client\\\\src\\\\Album.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport { firebase } from \"./App\";\nimport CustomizedDialogs from \"./Upload\";\nimport PostDialog from \"./Posts\";\nimport { Badge } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddPost from './AddPost';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport { SERVER } from \"./config\";\nimport ThreeDMap from './MyMap';\nimport PinPlants from './PinPlants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Copyright() {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    children: ['Copyright Â© ', /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"https://material-ui.com/\",\n      children: \"Your Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), ' ', new Date().getFullYear(), '.']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Copyright;\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\nexport default function Album(props) {\n  _s();\n\n  const classes = useStyles();\n  const [cards, setCards] = useState([]);\n  const [user, setUser] = useState(firebase.auth().currentUser);\n  const [reload, setReload] = useState(0);\n  useEffect(() => {\n    // Update the document title using the browser API\n    onFetchData();\n  }, [reload]);\n\n  const triggerFetch = () => {\n    setReload(reload + 1);\n  };\n\n  const onFetchData = async e => {// e.preventDefault();\n    // try {\n    //   const response = await fetch(`http://${SERVER}/plants/search`)\n    //   const jsonData = await response.json()\n    //   console.log(jsonData)\n    //   setCards(jsonData)\n    // } catch (err) {\n    //   console.log(err.message)\n    // }\n  };\n\n  async function onDeleteData(plant_id) {\n    console.log(\"deleting\", plant_id); // e.preventDefault();\n\n    try {\n      const response = await fetch(`http://${SERVER}/plants/${plant_id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const jsonData = await response.json();\n      console.log(jsonData);\n      setReload(reload + 1);\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(EcoIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"inherit\",\n          noWrap: true,\n          children: \"Plantsta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.heroContent,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h3\",\n            align: \"center\",\n            color: \"textPrimary\",\n            gutterBottom: true,\n            children: \"PlantSearchGo!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"center\",\n            color: \"textSecondary\",\n            paragraph: true,\n            children: \"Document and collect nearby plants!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.heroButtons,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              justify: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: user && !user.isAnonymous ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: () => {\n                    firebase.auth().signOut().then(() => {\n                      // Sign-out successful.\n                      console.log(\"sign out successful\");\n                      setUser(null);\n                      setReload(reload + 1);\n                    }).catch(error => {\n                      // An error happened.\n                      console.log(\"error with sign out\");\n                    });\n                  },\n                  children: \"Sign Out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 22\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: () => {\n                    firebase.auth().signInWithPopup(props.provider).then(result => {\n                      /** @type {firebase.auth.OAuthCredential} */\n                      var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n                      var token = credential.accessToken; // The signed-in user info.\n\n                      var user = result.user;\n                      setUser(user); // ...\n                    }).catch(error => {\n                      // Handle Errors here.\n                      var errorCode = error.code;\n                      var errorMessage = error.message; // The email of the user's account used.\n\n                      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n                      var credential = error.credential; // ...\n                    });\n                  },\n                  children: \"Sign In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(CustomizedDialogs, {\n                  user: user,\n                  reloadFunction: triggerFetch,\n                  setUserFunction: setUser\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThreeDMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PinPlants, {\n        isOpen: false,\n        pin_id: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.cardGrid,\n        maxWidth: \"md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classes.footer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        align: \"center\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: \"Something here to give the footer a purpose!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Album, \"cMZoUsFpXYvazASrMztW4nGsD34=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Album;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"Album\");","map":{"version":3,"sources":["C:/Users/jessi/OneDrive/Documents/GitHub/plantSearchGo/client/src/Album.js"],"names":["React","useState","useEffect","AppBar","Button","Card","CardActions","CardContent","CardMedia","CssBaseline","Grid","Toolbar","Typography","makeStyles","Container","Link","firebase","CustomizedDialogs","PostDialog","Badge","AddIcon","DeleteIcon","AddPost","EcoIcon","SERVER","ThreeDMap","PinPlants","Copyright","Date","getFullYear","useStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","Album","props","classes","cards","setCards","user","setUser","auth","currentUser","reload","setReload","onFetchData","triggerFetch","e","onDeleteData","plant_id","console","log","response","fetch","method","headers","jsonData","json","err","message","isAnonymous","signOut","then","catch","error","signInWithPopup","provider","result","credential","token","accessToken","errorCode","code","errorMessage","email"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport {firebase} from \"./App\";\r\nimport CustomizedDialogs from \"./Upload\"\r\nimport PostDialog from \"./Posts\"\r\nimport { Badge } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddPost from './AddPost';\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\nimport {SERVER} from  \"./config\"\r\nimport ThreeDMap from './MyMap';\r\nimport PinPlants from './PinPlants'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\n\r\nexport default function Album(props) {\r\n  const classes = useStyles();\r\n  const [cards, setCards] = useState([])\r\n  const [user, setUser] = useState(firebase.auth().currentUser)\r\n  const [reload, setReload] = useState(0)\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n\r\n    onFetchData()\r\n  }, [reload]);\r\n\r\n\r\n  const triggerFetch = () => {\r\n    setReload(reload+1)\r\n  }\r\n  const onFetchData = async e => {\r\n\r\n    // e.preventDefault();\r\n    // try {\r\n    //   const response = await fetch(`http://${SERVER}/plants/search`)\r\n    //   const jsonData = await response.json()\r\n\r\n    //   console.log(jsonData)\r\n    //   setCards(jsonData)\r\n    // } catch (err) {\r\n    //   console.log(err.message)\r\n    // }\r\n  }\r\n\r\n\r\n\r\n  async function onDeleteData(plant_id) {\r\n    console.log(\"deleting\", plant_id)\r\n    // e.preventDefault();\r\n    try {\r\n      const response = await fetch(`http://${SERVER}/plants/${plant_id}`,{\r\n        method: \"DELETE\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n      })\r\n\r\n      const jsonData = await response.json()\r\n      console.log(jsonData)\r\n      setReload(reload+1)\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <EcoIcon className={classes.icon} />\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Plantsta\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n              PlantSearchGo!\r\n            </Typography>\r\n            <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\r\n              Document and collect nearby plants!\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item>\r\n                  {user && !user.isAnonymous ?\r\n                     <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n                      firebase.auth().signOut().then(() => {\r\n                          // Sign-out successful.\r\n\r\n                          console.log(\"sign out successful\")\r\n                          setUser(null)\r\n                          setReload(reload+1)\r\n                        }).catch((error) => {\r\n                          // An error happened.\r\n                          console.log(\"error with sign out\")\r\n                         \r\n                        });\r\n                     }}> \r\n                     Sign Out\r\n                     </Button>\r\n                    :\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n                     firebase.auth()\r\n                     .signInWithPopup(props.provider)\r\n                     .then((result) => {\r\n                       /** @type {firebase.auth.OAuthCredential} */\r\n                       var credential = result.credential;\r\n                      \r\n                       // This gives you a Google Access Token. You can use it to access the Google API.\r\n                       var token = credential.accessToken;\r\n                       // The signed-in user info.\r\n                       var user = result.user;\r\n                       setUser(user)\r\n                       // ...\r\n                     }).catch((error) => {\r\n                       // Handle Errors here.\r\n                       var errorCode = error.code;\r\n                       var errorMessage = error.message;\r\n                       // The email of the user's account used.\r\n                       var email = error.email;\r\n                       // The firebase.auth.AuthCredential type that was used.\r\n                       var credential = error.credential;\r\n                       // ...\r\n                     });\r\n                  }}>\r\n                    Sign In\r\n                  </Button>\r\n\r\n                }\r\n                </Grid>\r\n                <Grid item>\r\n                  {/* <Button variant=\"outlined\" color=\"primary\">\r\n                    Secondary action\r\n                  </Button> */}\r\n                  <CustomizedDialogs user={user} reloadFunction={triggerFetch} setUserFunction={setUser}/>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <ThreeDMap/>\r\n        <PinPlants isOpen={false} pin_id={0}/>\r\n\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n\r\n          {/* <Grid container spacing={4}>\r\n            {cards.map((card) => (\r\n              <Grid item key={card.plant_id} xs={12} sm={6} md={4}>\r\n                <Badge badgeContent={card.for_sale ? \"selling\": \"\"} color=\"secondary\" invisible={card.for_sale ? false:true}>\r\n                  <Card className={classes.card}>\r\n                    <CardMedia\r\n                      className={classes.cardMedia}\r\n                      image={card.image}\r\n                      title=\"Image title\"\r\n                    />\r\n                    <CardContent className={classes.cardContent}>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {card.plant}\r\n                      </Typography>\r\n                      <Typography> \r\n                        by {!user || card.user_id != user.email ?  (card.user_id.startsWith(\"anon-user\") ? \"Anonymous\" : card.user_id) : \"Me\"} \r\n                      </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                    \r\n                      <PostDialog card={card}  />\r\n\r\n                      <Button size=\"small\" color=\"primary\" disabled={!user || card.user_id != user.email}>\r\n                        {!user || card.user_id != user.email ? \"\" : <AddPost user={user} reloadFunction={triggerFetch} plant_id = {card.plant_id}/>}\r\n                      </Button>\r\n\r\n                      <Button size=\"small\" color=\"primary\" disabled={!user || card.user_id != user.email} onClick={() => onDeleteData(card.plant_id)}>\r\n                      {!user || card.user_id != user.email ? \"\" : <DeleteIcon/>}\r\n                      </Button>\r\n\r\n                    </CardActions>\r\n                  </Card>\r\n                  </Badge>\r\n              </Grid>\r\n            ))}\r\n          </Grid> */}\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Footer\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n          Something here to give the footer a purpose!\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}